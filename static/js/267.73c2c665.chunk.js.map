{"version":3,"file":"static/js/267.73c2c665.chunk.js","mappings":"6MAwCA,UApCa,WACX,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MACGC,MAAK,YAAsB,IAAnBC,EAAkB,EAAlBA,QAAkB,EAATC,GAEhB,MAAO,CAAEC,YADWF,EAAQG,KAAI,kBAAoB,CAAEC,MAAtB,EAAGA,MAA0BH,GAA7B,EAAUA,GAAV,IAEjC,IACAF,MAAK,YAAsB,IAAnBG,EAAkB,EAAlBA,YACPR,GAAa,OAAIQ,GAClB,IACAG,OAAM,SAAAV,GACLC,EAASD,EAAMW,QAChB,GACJ,GAAE,KAGD,iCACE,6CACA,wBACGb,EAAUU,KAAI,gBAAGF,EAAH,EAAGA,GAAIG,EAAP,EAAOA,MAAP,OACb,yBACE,SAAC,KAAD,CAAMG,GAAE,iBAAYN,GAAMO,MAAO,CAAEC,KAAMnB,GAAzC,SACGc,KAFIH,EADI,MAQhBN,IAAS,uBAAIA,MAGnB,C,kRCnCDe,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEVC,EAAsBC,EAEfC,EAAY,SAAAC,GAAG,OAC1BA,EAJqB,mCAIEA,EAAMH,CADH,EAKrB,SAAeI,EAAtB,kC,aAAO,O,oBAAA,WAAiCC,GAAjC,gHAEoBP,EAAAA,EAAAA,IAAA,gBAAmBO,EAAnB,oBAAgCN,IAFpD,cAEGO,EAFH,SAWCA,EAASC,KAPXC,EAJC,EAIDA,OACAnB,EALC,EAKDA,GACAG,EANC,EAMDA,MACAiB,EAPC,EAODA,YACAC,EARC,EAQDA,SACAC,EATC,EASDA,aACAC,EAVC,EAUDA,aAVC,kBAYI,CACLJ,OAAAA,EACAnB,GAAAA,EACAG,MAAAA,EACAiB,YAAAA,EACAC,SAAAA,EACAC,aAAAA,EACAC,aAAAA,IAnBC,sCAsBG,IAAIC,MAAJ,MAtBH,gFA4BA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAA2BC,GAA3B,gGAEoBjB,EAAAA,EAAAA,IAAA,+BACGC,EADH,kBACoBgB,EADpB,YAFpB,cAEGT,EAFH,yBAKIA,EAASC,MALb,sCAOG,IAAIM,MAAJ,MAPH,gFAaA,SAAe3B,IAAtB,+B,aAAO,O,oBAAA,6GAEoBY,EAAAA,EAAAA,IAAA,sCAAyCC,IAF7D,cAEGO,EAFH,yBAGIA,EAASC,MAHb,sCAKG,IAAIM,MAAJ,MALH,gFAWA,SAAeG,EAAtB,kC,aAAO,O,oBAAA,WAA6B3B,GAA7B,gGAEoBS,EAAAA,EAAAA,IAAA,gBAAmBT,EAAnB,4BAAyCU,IAF7D,cAEGO,EAFH,yBAGIA,EAASC,MAHb,sCAKG,IAAIM,MAAJ,MALH,gFAWA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAgC5B,GAAhC,gGAEoBS,EAAAA,EAAAA,IAAA,gBAAmBT,EAAnB,4BAAyCU,IAF7D,cAEGO,EAFH,yBAGIA,EAASC,MAHb,sCAKG,IAAIM,MAAJ,MALH,gF","sources":["Pages/Home.jsx","services/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { fetchFilmHome } from '../services/api';\n\nconst Home = () => {\n  const location = useLocation();\n  const [movieList, setMovieList] = useState([]);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    fetchFilmHome()\n      .then(({ results, id }) => {\n        const requestList = results.map(({ title, id }) => ({ title, id }));\n        return { requestList };\n      })\n      .then(({ requestList }) => {\n        setMovieList([...requestList]);\n      })\n      .catch(error => {\n        setError(error.message);\n      });\n  }, []);\n\n  return (\n    <>\n      <div>Trending today</div>\n      <ul>\n        {movieList.map(({ id, title }) => (\n          <li key={id}>\n            <Link to={`movies/${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n      {error && <p>{error}</p>}\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\nimport defaultImage from '../defaultImage.jpg';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '8378c884a6341b6bb6a7cfb362550079';\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w200/';\nconst NOT_FOUND_IMAGE_URL = defaultImage;\n\nexport const getPoster = url =>\n  url ? IMAGE_BASE_URL + url : NOT_FOUND_IMAGE_URL;\n\n// _______________________MovieDetails________________________________________\n\nexport async function fetchMovieDetails(e) {\n  try {\n    const responce = await axios.get(`movie/${e}?api_key=${API_KEY}`);\n    const {\n      genres,\n      id,\n      title,\n      poster_path,\n      overview,\n      release_date,\n      vote_average,\n    } = responce.data;\n    return {\n      genres,\n      id,\n      title,\n      poster_path,\n      overview,\n      release_date,\n      vote_average,\n    };\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\n// ______________________________Movies________________________________________\n\nexport async function fetchMovies(query) {\n  try {\n    const responce = await axios.get(\n      `search/movie?api_key=${API_KEY}&query=${query}&page=1`\n    );\n    return responce.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\n// ______________________________Home____________________________________________\n\nexport async function fetchFilmHome() {\n  try {\n    const responce = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n    return responce.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\n// _______________________________Cast_________________________________________________\n\nexport async function fetchFilmCast(id) {\n  try {\n    const responce = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n    return responce.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\n// _______________________________Reviews______________________________________________________\n\nexport async function fetchFilmReviews(id) {\n  try {\n    const responce = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`);\n    return responce.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n"],"names":["location","useLocation","useState","movieList","setMovieList","error","setError","useEffect","fetchFilmHome","then","results","id","requestList","map","title","catch","message","to","state","from","axios","API_KEY","NOT_FOUND_IMAGE_URL","defaultImage","getPoster","url","fetchMovieDetails","e","responce","data","genres","poster_path","overview","release_date","vote_average","Error","fetchMovies","query","fetchFilmCast","fetchFilmReviews"],"sourceRoot":""}