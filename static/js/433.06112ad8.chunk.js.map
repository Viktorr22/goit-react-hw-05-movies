{"version":3,"file":"static/js/433.06112ad8.chunk.js","mappings":"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","sources":["Pages/MovieDetails.styled.jsx","components/MovieInfoMarkup.jsx","Pages/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const FilmBox = styled.div`\n  display: flex;\n  gap: 20px;\n  padding: 20px;\n`;\n\nexport const BackLink = styled(Link)`\n  border: 1px solid;\n  width: 80px;\n  padding: 10px;\n  margin: 20px;\n  border-radius: 5px;\n  text-decoration: none;\n  background-color: #07e407;\n`;\n\nexport const SolidBox = styled.div`\n  border-bottom: 2px solid gray;\n`;\n","import { FilmBox, SolidBox } from '../Pages/MovieDetails.styled';\nimport { getPoster } from '../services/api';\n\nexport const MovieInfo = ({ movieData }) => {\n  const { title, genres, overview, poster_path, release_date, vote_average } =\n    movieData;\n\n  const date = String(release_date).slice(0, 4);\n  const score = String(vote_average * 10).slice(0, 2);\n  const poster = getPoster(poster_path);\n  const genresList = genres.map(genre => genre.name).join(', ');\n\n  return (\n    <SolidBox>\n      <FilmBox>\n        <img src={poster} alt={title} width={200} />\n        <div>\n          <h2>\n            {title}({date})\n          </h2>\n          <p>User Scores: {score}%</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>{genresList}</p>\n        </div>\n      </FilmBox>\n    </SolidBox>\n  );\n};\n","import { useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport { BackLink, SolidBox } from './MovieDetails.styled';\nimport { fetchMovieDetails } from '../services/api';\nimport { MovieInfo } from 'components/MovieInfoMarkup';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    fetchMovieDetails(movieId)\n      .then(movieDet => {\n        setMovieInfo(movieDet);\n      })\n      .catch(error => {\n        setError(error.message);\n      });\n  }, [movieId]);\n\n  return (\n    <>\n      <BackLink to={backLinkLocationRef.current}>Go back</BackLink>\n      {movieInfo && <MovieInfo movieData={movieInfo} />}\n      <SolidBox>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n        {error && <p>{error}</p>}\n      </SolidBox>\n\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nimport defaultImage from '../defaultImage.jpg';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '8378c884a6341b6bb6a7cfb362550079';\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w200/';\nconst NOT_FOUND_IMAGE_URL = defaultImage;\n\nexport const getPoster = url =>\n  url ? IMAGE_BASE_URL + url : NOT_FOUND_IMAGE_URL;\n\n// _______________________MovieDetails________________________________________\n\nexport async function fetchMovieDetails(e) {\n  try {\n    const responce = await axios.get(`movie/${e}?api_key=${API_KEY}`);\n    const {\n      genres,\n      id,\n      title,\n      poster_path,\n      overview,\n      release_date,\n      vote_average,\n    } = responce.data;\n    return {\n      genres,\n      id,\n      title,\n      poster_path,\n      overview,\n      release_date,\n      vote_average,\n    };\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\n// ______________________________Movies________________________________________\n\nexport async function fetchMovies(query) {\n  try {\n    const responce = await axios.get(\n      `search/movie?api_key=${API_KEY}&query=${query}&page=1`\n    );\n    return responce.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\n// ______________________________Home____________________________________________\n\nexport async function fetchFilmHome() {\n  try {\n    const responce = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n    return responce.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\n// _______________________________Cast_________________________________________________\n\nexport async function fetchFilmCast(id) {\n  try {\n    const responce = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n    return responce.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\n// _______________________________Reviews______________________________________________________\n\nexport async function fetchFilmReviews(id) {\n  try {\n    const responce = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`);\n    return responce.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n"],"names":["FilmBox","styled","BackLink","Link","SolidBox","MovieInfo","movieData","title","genres","overview","poster_path","release_date","vote_average","date","String","slice","score","poster","getPoster","genresList","map","genre","name","join","src","alt","width","movieId","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useState","movieInfo","setMovieInfo","error","setError","useEffect","fetchMovieDetails","then","movieDet","catch","message","to","current","axios","API_KEY","NOT_FOUND_IMAGE_URL","defaultImage","url","e","responce","data","id","Error","fetchMovies","query","fetchFilmHome","fetchFilmCast","fetchFilmReviews"],"sourceRoot":""}