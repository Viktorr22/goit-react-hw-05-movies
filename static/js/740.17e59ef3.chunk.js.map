{"version":3,"file":"static/js/740.17e59ef3.chunk.js","mappings":"0OAIAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEDC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAyBC,GAAzB,gGAE2BH,EAAAA,EAAAA,IAAA,+BACGC,EADH,kBACoBE,EADpB,YAF3B,cAEUC,EAFV,yBAKWA,EAASC,MALpB,sCAOU,IAAIC,MAAJ,MAPV,gFAmFA,UAxEe,WAAO,IAAD,EACnB,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,IAArC,eAAOK,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMb,EAAK,UAAGY,EAAaE,IAAI,gBAApB,QAAgC,GACrCC,GAAWC,EAAAA,EAAAA,MAEXC,EAAmB,SAAAC,GAClBA,GAtBT,SAEyB,GAAVnB,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAqBXA,CAAUmB,GACPC,MAAK,YAAkB,IAChBC,EADe,EAAdC,QACqBC,KAAI,kBAA6B,CAC3DC,eAD8B,EAAGA,eAEjCC,GAF8B,EAAmBA,GAAnB,IAKhC,OADAC,QAAQC,IAAIN,GACL,CAAEA,YAAAA,EACV,IACAD,MAAK,YAAsB,IAAnBC,EAAkB,EAAlBA,YACPV,GAAU,OAAIU,GACf,IACAO,OAAM,SAAApB,GACLC,EAASD,EAAMqB,QAChB,GACJ,GAEDC,EAAAA,EAAAA,YAAU,WACRZ,EAAiBjB,EAClB,GAAE,CAACA,IAuBJ,OACE,iCACE,kBAAM8B,SAfW,SAAAC,GACnBA,EAAMC,iBAEqB,KAAvB3B,EAAY4B,QAIhBR,QAAQC,IAAIrB,GACZY,EAAiBZ,GACjBQ,EAAgB,CAAEb,MAAOK,IACzBC,EAAe,KANb4B,MAAM,kFAOT,EAIG,WACE,kBAAOC,KAAK,OAAOC,MAAO/B,EAAagC,SAxBpB,SAAAC,GACvB,IAAMC,EAAaD,EAAIE,OAAOJ,MAC9B,GAAmB,KAAfG,EACF,OAAOjC,EAAe,IAExBA,EAAeiC,EAChB,KAmBK,mBAAQJ,KAAK,SAAb,wBAEF,wBACG1B,EAAOa,KAAI,gBAAGE,EAAH,EAAGA,GAAID,EAAP,EAAOA,eAAP,OACV,yBACE,SAAC,KAAD,CAAMkB,GAAE,UAAKjB,GAAMkB,MAAO,CAAEC,KAAM5B,GAAlC,SACGQ,KAFIC,EADC,MAQbjB,IAAS,uBAAIA,MAGnB,C","sources":["Pages/Movies.jsx"],"sourcesContent":["import { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '8378c884a6341b6bb6a7cfb362550079';\n\nasync function fetchFilm(query) {\n  try {\n    const responce = await axios.get(\n      `search/movie?api_key=${API_KEY}&query=${query}&page=1`\n    );\n    return responce.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\nconst Movies = () => {\n  const [requestName, setRequestName] = useState('');\n  const [error, setError] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const location = useLocation();\n\n  const FetchMoviesFilms = e => {\n    if (!e) return;\n    fetchFilm(e)\n      .then(({ results }) => {\n        const requestList = results.map(({ original_title, id }) => ({\n          original_title,\n          id,\n        }));\n        console.log(requestList);\n        return { requestList };\n      })\n      .then(({ requestList }) => {\n        setMovies([...requestList]);\n      })\n      .catch(error => {\n        setError(error.message);\n      });\n  };\n\n  useEffect(() => {\n    FetchMoviesFilms(query);\n  }, [query]);\n\n  const handleNameChange = evt => {\n    const queryValue = evt.target.value;\n    if (queryValue === '') {\n      return setRequestName('');\n    }\n    setRequestName(queryValue);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (requestName.trim() === '') {\n      alert('Введите запрос');\n      return;\n    }\n    console.log(requestName);\n    FetchMoviesFilms(requestName);\n    setSearchParams({ query: requestName });\n    setRequestName('');\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" value={requestName} onChange={handleNameChange} />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {movies.map(({ id, original_title }) => (\n          <li key={id}>\n            <Link to={`${id}`} state={{ from: location }}>\n              {original_title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n      {error && <p>{error}</p>}\n    </>\n  );\n};\n\nexport default Movies;\n\n// import { Link, useLocation, useSearchParams } from 'react-router-dom';\n// import { useState } from 'react';\n// import axios from 'axios';\n\n// axios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n// const API_KEY = '8378c884a6341b6bb6a7cfb362550079';\n\n// async function fetchFilm(query) {\n//   try {\n//     const responce = await axios.get(\n//       `search/movie?api_key=${API_KEY}&query=${query}&page=1`\n//     );\n//     return responce.data;\n//   } catch (error) {\n//     throw new Error(error);\n//   }\n// }\n\n// const Movies = () => {\n//   const [movies, setMovies] = useState([]);\n//   const [searchParams, setSearchParams] = useSearchParams();\n//   const query = searchParams.get('query') ?? '';\n//   const location = useLocation();\n//   const [error, setError] = useState('');\n\n//   const handleNameChange = evt => {\n//     const queryValue = evt.target.value;\n//     if (queryValue === '') {\n//       return setSearchParams({});\n//     }\n//     setSearchParams({ query: queryValue });\n//   };\n\n//   const handleSubmit = event => {\n//     event.preventDefault();\n\n//     if (query.trim() === '') {\n//       alert('Введите запрос');\n//       return;\n//     }\n//     console.log(query);\n//     if (!query) return;\n//     fetchFilm(query)\n//       .then(({ results }) => {\n//         const requestList = results.map(({ original_title, id }) => ({\n//           original_title,\n//           id,\n//         }));\n//         console.log(requestList);\n//         return { requestList };\n//       })\n//       .then(({ requestList }) => {\n//         setMovies([...requestList]);\n//       })\n//       .catch(error => {\n//         setError(error.message);\n//       });\n//     setSearchParams({ query: query });\n//     // setSearchParams({ query: query });\n//     // setSearchParams({});\n//     // setMovies([]);\n//   };\n\n//   return (\n//     <>\n//       <form onSubmit={handleSubmit}>\n//         <input type=\"text\" value={query} onChange={handleNameChange} />\n//         <button type=\"submit\">Search</button>\n//       </form>\n//       <ul>\n//         {movies.map(({ id, original_title }) => (\n//           <li key={id}>\n//             <Link to={`${id}`} state={{ from: location }}>\n//               {original_title}\n//             </Link>\n//           </li>\n//         ))}\n//       </ul>\n//       {error && <p>{error}</p>}\n//     </>\n//   );\n// };\n\n// export default Movies;\n"],"names":["axios","API_KEY","fetchFilm","query","responce","data","Error","useState","requestName","setRequestName","error","setError","movies","setMovies","useSearchParams","searchParams","setSearchParams","get","location","useLocation","FetchMoviesFilms","e","then","requestList","results","map","original_title","id","console","log","catch","message","useEffect","onSubmit","event","preventDefault","trim","alert","type","value","onChange","evt","queryValue","target","to","state","from"],"sourceRoot":""}