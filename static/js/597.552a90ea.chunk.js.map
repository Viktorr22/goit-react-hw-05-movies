{"version":3,"file":"static/js/597.552a90ea.chunk.js","mappings":"kOAIAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAGDC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAyBC,GAAzB,gGAE2BH,EAAAA,EAAAA,IAAA,gBAAmBG,EAAnB,4BAAyCF,IAFpE,cAEUG,EAFV,yBAGWA,EAASC,MAHpB,sCAKU,IAAIC,MAAJ,MALV,gFAoDA,UA3Ca,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KAwBA,OAtBAC,EAAAA,EAAAA,YAAU,YAhBZ,SAEyB,GAAVZ,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAeXA,CAAUK,GACPQ,MAAK,YAAe,IACbC,EADY,EAAXC,KACgBC,KACrB,kBAAqD,CACnDC,aADF,EAAGA,aAEDC,cAFF,EAAiBA,cAGfC,UAHF,EAAgCA,UAI9BlB,GAJF,EAA2CA,GAA3C,IAQF,OADAmB,QAAQC,IAAIP,GACL,CAAEA,UAAAA,EACV,IACAD,MAAK,YAAoB,IAAjBC,EAAgB,EAAhBA,UACPL,GAAa,OAAIK,GAClB,IACAQ,OAAM,SAAAZ,GACLC,EAASD,EAAMa,QAChB,GACJ,GAAE,CAAClB,KAGF,iCACE,wBACGG,EAAUQ,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,cAAeC,EAAhC,EAAgCA,UAAWlB,EAA3C,EAA2CA,GAA3C,OACb,2BACE,gBAAKuB,IA3CM,mCA2CgBP,EAAcQ,IAAKP,KAC9C,uBAAIA,KACJ,uBAAIC,MAHGlB,EADI,MAQhBS,IAAS,uBAAIA,MAGnB,C","sources":["components/Cast.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '8378c884a6341b6bb6a7cfb362550079';\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w200/';\n\nasync function fetchFilm(id) {\n  try {\n    const responce = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n    return responce.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [actorInfo, setActorInfo] = useState([]);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    fetchFilm(movieId)\n      .then(({ cast }) => {\n        const actorList = cast.map(\n          ({ profile_path, original_name, character, id }) => ({\n            profile_path,\n            original_name,\n            character,\n            id,\n          })\n        );\n        console.log(actorList);\n        return { actorList };\n      })\n      .then(({ actorList }) => {\n        setActorInfo([...actorList]);\n      })\n      .catch(error => {\n        setError(error.message);\n      });\n  }, [movieId]);\n\n  return (\n    <>\n      <ul>\n        {actorInfo.map(({ profile_path, original_name, character, id }) => (\n          <li key={id}>\n            <img src={IMAGE_BASE_URL + profile_path} alt={original_name} />\n            <p>{original_name}</p>\n            <p>{character}</p>\n          </li>\n        ))}\n      </ul>\n      {error && <p>{error}</p>}\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["axios","API_KEY","fetchFilm","id","responce","data","Error","movieId","useParams","useState","actorInfo","setActorInfo","error","setError","useEffect","then","actorList","cast","map","profile_path","original_name","character","console","log","catch","message","src","alt"],"sourceRoot":""}